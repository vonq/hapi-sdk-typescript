/**
 * VONQ Hiring APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  nullable,
  object,
  Schema,
  string,
  unknown,
} from '../schema';
import {
  AudienceGroupEnum,
  audienceGroupEnumSchema,
} from './audienceGroupEnum';
import { Channel, channelSchema } from './channel';
import { ChannelTypeEnum, channelTypeEnumSchema } from './channelTypeEnum';
import { Industry, industrySchema } from './industry';
import { JobFunction, jobFunctionSchema } from './jobFunction';
import { Location, locationSchema } from './location';
import { Price, priceSchema } from './price';
import { TimeToProcess, timeToProcessSchema } from './timeToProcess';
import { TimeToSetup, timeToSetupSchema } from './timeToSetup';

export interface Product {
  title: string;
  locations: Location[];
  jobFunctions: JobFunction[];
  industries: Industry[];
  description: string | null;
  homepage: string | null;
  logoUrl: string | null;
  logoSquareUrl: string | null;
  logoRectangleUrl: string | null;
  duration?: unknown | null;
  timeToProcess: TimeToProcess;
  timeToSetup: TimeToSetup;
  productId: string;
  /** the price to be displayed to customers */
  vonqPrice: Price[];
  ratecardPrice: Price[];
  /** The type of a channel */
  type: ChannelTypeEnum;
  crossPostings: string[];
  channel: Channel;
  /** The product's audience group (niche/generic) */
  audienceGroup: AudienceGroupEnum;
  /** is My Contract enabled for the channel */
  mcEnabled: boolean;
  /** is the product available only for My Contract order */
  mcOnly: boolean;
  /** is the product available for order. a campaign cannot be ordered with a product having `allow_orders` set to `false`. */
  allowOrders: boolean;
}

export const productSchema: Schema<Product> = object({
  title: ['title', string()],
  locations: ['locations', array(lazy(() => locationSchema))],
  jobFunctions: ['job_functions', array(lazy(() => jobFunctionSchema))],
  industries: ['industries', array(lazy(() => industrySchema))],
  description: ['description', nullable(string())],
  homepage: ['homepage', nullable(string())],
  logoUrl: ['logo_url', nullable(string())],
  logoSquareUrl: ['logo_square_url', nullable(string())],
  logoRectangleUrl: ['logo_rectangle_url', nullable(string())],
  duration: ['duration', nullable(unknown())],
  timeToProcess: ['time_to_process', lazy(() => timeToProcessSchema)],
  timeToSetup: ['time_to_setup', lazy(() => timeToSetupSchema)],
  productId: ['product_id', string()],
  vonqPrice: ['vonq_price', array(lazy(() => priceSchema))],
  ratecardPrice: ['ratecard_price', array(lazy(() => priceSchema))],
  type: ['type', channelTypeEnumSchema],
  crossPostings: ['cross_postings', array(string())],
  channel: ['channel', lazy(() => channelSchema)],
  audienceGroup: ['audience_group', audienceGroupEnumSchema],
  mcEnabled: ['mc_enabled', boolean()],
  mcOnly: ['mc_only', boolean()],
  allowOrders: ['allow_orders', boolean()],
});
