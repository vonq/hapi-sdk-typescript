/**
 * VONQ Hiring APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  nullable,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Autocomplete, autocompleteSchema } from './autocomplete';
import { FacetOption, facetOptionSchema } from './facetOption';
import {
  FacetOptionShowFacets,
  facetOptionShowFacetsSchema,
} from './facetOptionShowFacets';
import { FacetRule, facetRuleSchema } from './facetRule';
import { TypeEnum, typeEnumSchema } from './typeEnum';

export interface Facet {
  name: string;
  label: string;
  sort: string;
  required: boolean;
  type: TypeEnum;
  options: FacetOption[];
  rules?: FacetRule[];
  autocomplete: Autocomplete | null;
  show?: FacetOptionShowFacets[];
}

export const facetSchema: Schema<Facet> = object({
  name: ['name', string()],
  label: ['label', string()],
  sort: ['sort', string()],
  required: ['required', boolean()],
  type: ['type', typeEnumSchema],
  options: ['options', array(lazy(() => facetOptionSchema))],
  rules: ['rules', optional(array(lazy(() => facetRuleSchema)))],
  autocomplete: ['autocomplete', nullable(lazy(() => autocompleteSchema))],
  show: ['show', optional(array(lazy(() => facetOptionShowFacetsSchema)))],
});
