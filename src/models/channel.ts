/**
 * VONQ Hiring APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  ContractCredential,
  contractCredentialSchema,
} from './contractCredential';
import { Facet, facetSchema } from './facet';
import { Type1Enum, type1EnumSchema } from './type1Enum';

export interface Channel {
  /** The name of a channel */
  name?: string;
  /** The url of a channel */
  url?: string;
  /** The type of a channel */
  type?: Type1Enum;
  /** Does a channel support My Contracts */
  mcEnabled?: boolean;
  contractCredentials?: ContractCredential[];
  contractFacets?: Facet[];
  /** Dynamic posting requirements for MC products, used to provide additional data with vacancies */
  postingRequirements?: Facet[];
}

export const channelSchema: Schema<Channel> = object({
  name: ['name', optional(string())],
  url: ['url', optional(string())],
  type: ['type', optional(type1EnumSchema)],
  mcEnabled: ['mc_enabled', optional(boolean())],
  contractCredentials: [
    'contract_credentials',
    optional(array(lazy(() => contractCredentialSchema))),
  ],
  contractFacets: ['contract_facets', optional(array(lazy(() => facetSchema)))],
  postingRequirements: [
    'posting_requirements',
    optional(array(lazy(() => facetSchema))),
  ],
});
